name: Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Enter Environment Name"
        required: true
        #default: "dev"
 # push:
 #   branches:
 #     - main
 # pull_request:
 #   branches:
 #     - main


env:
# Secrets
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  TFE_TOKEN: ${{ secrets.TF_API_TOKEN }}
# Vars
  AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
  AZURE_PROJECT_NAME : ${{ vars.AZURE_PROJECT_NAME }}
# Vars input
  AZURE_ENVIRONMENT: ${{ inputs.environment }}

jobs:
  terraform:
    runs-on: ubuntu-latest
#    environment: dev
    env:
      TFC_WORKSPACE: ${{ vars.AZURE_ENVIRONMENT }}
      TFE_TOKEN: ${{ secrets.TF_API_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print Environment Variable
        run: |
          echo "Deploying to environment: $AZURE_ENVIRONMENT"
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}  # Auto-login to Terraform Cloud
          terraform_version : latest

      - name: Select Workspace
        run: |
          WORKSPACE_NAME="2Ops-${{ vars.TFC_WORKSPACE }}"
          terraform workspace select $WORKSPACE_NAME 
      
      - name: Terraform Init
        working-directory: terraform
        run: terraform init -backend-config="workspace=${{ vars.TFC_WORKSPACE }}"


      - name: Terraform Plan
        working-directory: terraform
        run: |
          terraform plan \
            -var="project_name=${{ vars.AZURE_PROJECT_NAME }}" \
            -var="environment=${{ vars.AZURE_ENVIRONMENT }}" \
            -var="location=${{ vars.AZURE_LOCATION }}" \
            -var="tenant_id=${{ secrets.AZURE_TENANT_ID }}"

      - name: Terraform Apply
        working-directory: terraform
        if: github.ref == 'refs/heads/main'
        run: |
          terraform apply -auto-approve \
            -var="project_name=${{ vars.AZURE_PROJECT_NAME }}" \
            -var="environment=${{ vars.AZURE_ENVIRONMENT }}" \
            -var="location=${{ vars.AZURE_LOCATION }}" \
            -var="tenant_id=${{ secrets.AZURE_TENANT_ID }}"
